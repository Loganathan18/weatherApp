{"ast":null,"code":"import axios from 'axios';\nimport * as Constants from './Constants';\nimport { Network } from '@ionic-native/network';\nconst APIMethods = {\n  GET: \"GET\",\n  POST: \"POST\",\n  PUT: \"PUT\",\n  DELETE: \"DELETE\"\n};\nexport const APIResult = {\n  SUCCESS: \"true\",\n  FAILURE: \"false\"\n};\nexport const getWeatherReport = async (longtitude, latitude) => {\n  let data = {};\n  let api_id = Constants.Configs.api_id;\n  return executeAPI('weather?lat =' + latitude + '&lon=' + longtitude + '&appid=' + api_id, APIMethods.GET, false, data);\n};\n\nconst executeAPI = async (endpoint, method, authRequired, data, params) => {\n  var isConntected = (await Network.onConnect()).connected;\n\n  if (isConntected) {\n    let headers = {};\n\n    try {\n      const response = await axios({\n        method: method,\n        url: Constants.Configs.BASE_URL + endpoint,\n        data: data,\n        headers: headers,\n        params: params\n      });\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      return {\n        success: false,\n        message: 'Error Occurred in the Request!'\n      };\n    }\n  } else {\n    alert(\"No Internet Connection\");\n  }\n};","map":{"version":3,"sources":["D:/IonicProjects/weather-App/src/common/ServerAPI.tsx"],"names":["axios","Constants","Network","APIMethods","GET","POST","PUT","DELETE","APIResult","SUCCESS","FAILURE","getWeatherReport","longtitude","latitude","data","api_id","Configs","executeAPI","endpoint","method","authRequired","params","isConntected","onConnect","connected","headers","response","url","BASE_URL","console","log","error","success","message","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,MAAMC,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAE,KADU;AAEfC,EAAAA,IAAI,EAAE,MAFS;AAGfC,EAAAA,GAAG,EAAE,KAHU;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;AAOA,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,OAAO,EAAE,MADY;AAErBC,EAAAA,OAAO,EAAE;AAFY,CAAlB;AAYP,OAAO,MAAMC,gBAAgB,GAAG,OAAOC,UAAP,EAA2BC,QAA3B,KAAgD;AAC5E,MAAIC,IAA0B,GAAG,EAAjC;AACA,MAAIC,MAAM,GAAGd,SAAS,CAACe,OAAV,CAAkBD,MAA/B;AACA,SAAOE,UAAU,CAAC,kBAAgBJ,QAAhB,GAAyB,OAAzB,GAAiCD,UAAjC,GAA4C,SAA5C,GAAsDG,MAAvD,EAA+DZ,UAAU,CAACC,GAA1E,EAA+E,KAA/E,EAAsFU,IAAtF,CAAjB;AACH,CAJM;;AAMP,MAAMG,UAAU,GAAG,OAAOC,QAAP,EAAyBC,MAAzB,EAAsCC,YAAtC,EAA8DN,IAA9D,EAA0EO,MAA1E,KAA2F;AAE1G,MAAIC,YAAY,GAAI,CAAC,MAAMpB,OAAO,CAACqB,SAAR,EAAP,EAA4BC,SAAhD;;AAEA,MAAGF,YAAH,EAAgB;AACZ,QAAIG,OAA6B,GAAG,EAApC;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC;AACzBmB,QAAAA,MAAM,EAAEA,MADiB;AAEzBQ,QAAAA,GAAG,EAAE1B,SAAS,CAACe,OAAV,CAAkBY,QAAlB,GAA6BV,QAFT;AAGzBJ,QAAAA,IAAI,EAAEA,IAHmB;AAIzBW,QAAAA,OAAO,EAAEA,OAJgB;AAKzBJ,QAAAA,MAAM,EAAEA;AALiB,OAAD,CAA5B;AAOAQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACZ,IAArB;AACA,aAAOY,QAAQ,CAACZ,IAAhB;AACH,KAVD,CAUE,OAAOiB,KAAP,EAAc;AACZ,aAAO;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAP;AACH;AACJ,GAfD,MAeO;AACHC,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AAEJ,CAvBD","sourcesContent":["import axios from 'axios';\nimport * as Constants from './Constants';\nimport * as Utilities from './Utilities';\nimport { Network } from '@ionic-native/network';\nconst APIMethods = {\n    GET: \"GET\",\n    POST: \"POST\",\n    PUT: \"PUT\",\n    DELETE: \"DELETE\"\n}\n\nexport const APIResult = {\n    SUCCESS: \"true\",\n    FAILURE: \"false\"\n}\n\nexport interface PurchaseSummary{\n    bulk_purchase_date:string;\n    total_bulk_quantity:string;\n    average_bulk_fat:string;\n    average_bulk_snf:string;\n}\n\nexport const getWeatherReport = async (longtitude: Number, latitude: Number) => {\n    let data: { [k: string]: any } = {};\n    let api_id = Constants.Configs.api_id;\n    return executeAPI('weather?lat ='+latitude+'&lon='+longtitude+'&appid='+api_id, APIMethods.GET, false, data);\n}\n\nconst executeAPI = async (endpoint: string, method: any, authRequired?: boolean, data?: any, params?: any) => {\n    \n    var isConntected = ((await Network.onConnect()).connected);\n    \n    if(isConntected){\n        let headers: { [k: string]: any } = {};\n        try {\n            const response = await axios({\n                method: method,\n                url: Constants.Configs.BASE_URL + endpoint,\n                data: data,\n                headers: headers,\n                params: params\n            });\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            return { success: false, message: 'Error Occurred in the Request!' }\n        }\n    } else {\n        alert(\"No Internet Connection\");\n    }\n    \n}\n\n"]},"metadata":{},"sourceType":"module"}