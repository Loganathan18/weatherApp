{"ast":null,"code":"var _jsxFileName = \"D:\\\\IonicProjects\\\\weather-App\\\\src\\\\pages\\\\Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonContent, IonPage, useIonViewDidEnter } from '@ionic/react';\nimport './Home.css';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { useEffect, useState } from 'react';\nimport Preloader from '../components/Preloader';\nimport * as Constants from '../common/Constants';\nimport { Network } from '@capacitor/network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [showLoading, setShowLoading] = useState(false);\n  const [locationName, setLocationName] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [currentTemp, setCurrentTemp] = useState(0);\n  const [weatherRes, setWeatherRes] = useState();\n  useIonViewDidEnter(() => {\n    const coordinates = Geolocation.getCurrentPosition();\n    coordinates.then(data => {\n      setLatitude(data.coords.latitude);\n      setLongitude(data.coords.longitude);\n    });\n  });\n  useEffect(() => {\n    setShowLoading(true);\n    getWeatherData();\n  }, [longitude]);\n\n  async function getWeatherData() {\n    const status = await Network.getStatus();\n\n    if (status.connected && status.connectionType === \"wifi\") {\n      let api_id = Constants.Configs.api_id;\n      const result = await fetch(Constants.Configs.BASE_URL + 'weather?lat=' + latitude + '&lon=' + longitude + '&appid=' + api_id);\n      const data = await result.json();\n      setWeatherRes(data);\n    }\n\n    setShowLoading(false);\n  }\n\n  useEffect(() => {\n    if ((weatherRes === null || weatherRes === void 0 ? void 0 : weatherRes.name) != undefined) setLocationName(weatherRes.name);\n\n    if ((weatherRes === null || weatherRes === void 0 ? void 0 : weatherRes.dt) != undefined) {\n      var date = new Date(weatherRes.dt * 1000);\n      setCurrentDate(date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear());\n    }\n\n    if ((weatherRes === null || weatherRes === void 0 ? void 0 : weatherRes.main.temp) != undefined) {\n      setCurrentTemp(weatherRes.main.temp - 273.15);\n    }\n  }, [weatherRes]);\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true,\n      children: [/*#__PURE__*/_jsxDEV(Preloader, {\n        isOpen: showLoading,\n        onDidDismiss: () => setShowLoading(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"osahan-success vh-100 bg-weather\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-5 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icofont-check-circled display-1 text-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-white font-weight-bold\",\n            children: locationName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-weight-light\",\n            children: \"Today's Weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-weight-light\",\n            children: currentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white weather-text\",\n            children: currentTemp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"XDDRg/JOhIJRqnh59rClzz96jTI=\", false, function () {\n  return [useIonViewDidEnter];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/IonicProjects/weather-App/src/pages/Home.tsx"],"names":["IonContent","IonPage","useIonViewDidEnter","Geolocation","useEffect","useState","Preloader","Constants","Network","Home","latitude","setLatitude","longitude","setLongitude","showLoading","setShowLoading","locationName","setLocationName","currentDate","setCurrentDate","currentTemp","setCurrentTemp","weatherRes","setWeatherRes","coordinates","getCurrentPosition","then","data","coords","getWeatherData","status","getStatus","connected","connectionType","api_id","Configs","result","fetch","BASE_URL","json","name","undefined","dt","date","Date","getDate","getMonth","getFullYear","main","temp"],"mappings":"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","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, useIonViewDidEnter, useIonViewWillEnter } from '@ionic/react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Home.css';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { useEffect, useState } from 'react';\nimport * as ServerAPI from '../common/ServerAPI';\nimport Preloader from '../components/Preloader';\nimport * as Constants from '../common/Constants';\nimport { Network } from '@capacitor/network';\n\nconst Home: React.FC = () => {\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [showLoading, setShowLoading] = useState(false);\n  const [locationName,setLocationName] = useState(\"\");\n  const [currentDate,setCurrentDate] = useState(\"\");\n  const [currentTemp,setCurrentTemp] = useState(0);\n  const [weatherRes,setWeatherRes] = useState<ServerAPI.WeatherRes>();\n  \n  useIonViewDidEnter(()=>{\n    const coordinates = Geolocation.getCurrentPosition();\n    coordinates.then(data=>{\n      setLatitude(data.coords.latitude);\n      setLongitude(data.coords.longitude);\n    });\n  });\n  \n  \n  useEffect(()=>{\n    setShowLoading(true);\n    getWeatherData();\n  },[longitude]);\n\n  async function getWeatherData() {\n    const status = await Network.getStatus();\n    \n    if(status.connected && status.connectionType===\"wifi\"){\n      let api_id = Constants.Configs.api_id;\n      const result = await fetch(Constants.Configs.BASE_URL+'weather?lat='+latitude+'&lon='+longitude+'&appid='+api_id);\n      const data = await result.json();\n      setWeatherRes(data);\n    }\n    setShowLoading(false);\n    \n  }\n\n  useEffect(()=>{\n    if(weatherRes?.name!=undefined)\n      setLocationName(weatherRes.name);\n    if(weatherRes?.dt!=undefined){\n      var date = new Date(weatherRes.dt*1000);\n      setCurrentDate(date.getDate()+\"/\"+(date.getMonth()+1)+\"/\"+date.getFullYear());\n    }\n    if(weatherRes?.main.temp!=undefined){\n      setCurrentTemp(weatherRes.main.temp-273.15);\n    }\n    \n      \n    \n  },[weatherRes]);\n  \n  \n  return (\n    <IonPage>\n      <IonContent fullscreen>\n        <Preloader isOpen={showLoading} onDidDismiss={() => setShowLoading(false)} />\n        <div className=\"osahan-success vh-100 bg-weather\">\n          <div className=\"p-5 text-center\">\n              <i className=\"icofont-check-circled display-1 text-warning\"></i>\n              <h1 className=\"text-white font-weight-bold\">{locationName}</h1>\n              <p className=\"text-white font-weight-light\">Today's Weather</p>\n              <p className=\"text-white font-weight-light\">{currentDate}</p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-white weather-text\">{currentTemp}</p>\n          </div>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}