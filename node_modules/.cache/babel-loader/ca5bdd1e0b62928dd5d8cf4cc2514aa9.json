{"ast":null,"code":"var _jsxFileName = \"D:\\\\IonicProjects\\\\weather-App\\\\src\\\\pages\\\\Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, useIonViewDidEnter } from '@ionic/react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Home.css';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { Network } from '@ionic-native/network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  useIonViewDidEnter(() => {\n    const coordinates = Geolocation.getCurrentPosition();\n    coordinates.then(data => {\n      console.log(data.coords.latitude);\n      console.log(data.coords.longitude);\n    });\n    const connectSubscription = Network.onConnect().subscribe(() => {\n      console.log('network connected!'); // We just got a connection but we need to wait briefly\n      // before we determine the connection type. Might need to wait.\n      // prior to doing any api requests as well.\n\n      setTimeout(() => {\n        if (Network.type === 'wifi') {\n          console.log('we got a wifi connection, woohoo!');\n        }\n      }, 3000);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"Blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true,\n      children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n        collapse: \"condense\",\n        children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n          children: /*#__PURE__*/_jsxDEV(IonTitle, {\n            size: \"large\",\n            children: \"Blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExploreContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"S3wWZh2WH4f1MYml2DmoEYZVg4I=\", false, function () {\n  return [useIonViewDidEnter];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/IonicProjects/weather-App/src/pages/Home.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","useIonViewDidEnter","ExploreContainer","Geolocation","Network","Home","coordinates","getCurrentPosition","then","data","console","log","coords","latitude","longitude","connectSubscription","onConnect","subscribe","setTimeout","type"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyCC,QAAzC,EAAmDC,UAAnD,EAA+DC,kBAA/D,QAAyF,cAAzF;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3BJ,EAAAA,kBAAkB,CAAC,MAAI;AACrB,UAAMK,WAAW,GAAGH,WAAW,CAACI,kBAAZ,EAApB;AACAD,IAAAA,WAAW,CAACE,IAAZ,CAAiBC,IAAI,IAAE;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAL,CAAYC,QAAxB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAL,CAAYE,SAAxB;AACD,KAHD;AAIA,UAAMC,mBAAmB,GAAGX,OAAO,CAACY,SAAR,GAAoBC,SAApB,CAA8B,MAAM;AAC9DP,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAD8D,CAE9D;AACC;AACD;;AACAO,MAAAA,UAAU,CAAC,MAAM;AACf,YAAId,OAAO,CAACe,IAAR,KAAiB,MAArB,EAA6B;AAC3BT,UAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD;AACF,OAJS,EAIP,IAJO,CAAV;AAKD,KAV2B,CAA5B;AAYD,GAlBiB,CAAlB;AAqBA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,UAAD;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAY,MAAA,UAAU,MAAtB;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,UAApB;AAAA,+BACE,QAAC,UAAD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvCD;;GAAMN,I;UACJJ,kB;;;KADII,I;AAyCN,eAAeA,IAAf","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, useIonViewDidEnter } from '@ionic/react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Home.css';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { Network } from '@ionic-native/network';\n\nconst Home: React.FC = () => {\n  useIonViewDidEnter(()=>{\n    const coordinates = Geolocation.getCurrentPosition();\n    coordinates.then(data=>{\n      console.log(data.coords.latitude);\n      console.log(data.coords.longitude);\n    });\n    const connectSubscription = Network.onConnect().subscribe(() => {\n      console.log('network connected!');\n      // We just got a connection but we need to wait briefly\n       // before we determine the connection type. Might need to wait.\n      // prior to doing any api requests as well.\n      setTimeout(() => {\n        if (Network.type === 'wifi') {\n          console.log('we got a wifi connection, woohoo!');\n        }\n      }, 3000);\n    });\n\n  });\n  \n  \n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Blank</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Blank</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <ExploreContainer />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}