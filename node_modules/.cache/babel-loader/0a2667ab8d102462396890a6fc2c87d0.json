{"ast":null,"code":"import _slicedToArray from\"D:/IonicProjects/weather-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{IonContent,IonPage,useIonViewDidEnter}from'@ionic/react';import'./Home.css';import{Geolocation}from'@capacitor/geolocation';import{useEffect,useState}from'react';import*as ServerAPI from'../common/ServerAPI';import Preloader from'../components/Preloader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),latitude=_useState2[0],setLatitude=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),longitude=_useState4[0],setLongitude=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showLoading=_useState6[0],setShowLoading=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),locationName=_useState8[0],setLocationName=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),weatherRes=_useState10[0],setWeatherRes=_useState10[1];useIonViewDidEnter(function(){var coordinates=Geolocation.getCurrentPosition();coordinates.then(function(data){setLatitude(data.coords.latitude);setLongitude(data.coords.longitude);});});useEffect(function(){setShowLoading(true);ServerAPI.getWeatherReport(longitude,latitude).then(function(data){setShowLoading(false);if(data){setWeatherRes(data);}});},[longitude]);useEffect(function(){if((weatherRes===null||weatherRes===void 0?void 0:weatherRes.name)!=undefined)setLocationName(weatherRes.name);},[weatherRes]);return/*#__PURE__*/_jsx(IonPage,{children:/*#__PURE__*/_jsxs(IonContent,{fullscreen:true,children:[/*#__PURE__*/_jsx(Preloader,{isOpen:showLoading,onDidDismiss:function onDidDismiss(){return setShowLoading(false);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"osahan-success vh-100 bg-weather\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-5 text-center\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"icofont-check-circled display-1 text-warning\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-white font-weight-bold\",children:locationName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-white font-weight-light\",children:\"Today's Weather\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-white weather-text\",children:\"30\"})})]})]})});};export default Home;","map":{"version":3,"sources":["D:/IonicProjects/weather-App/src/pages/Home.tsx"],"names":["IonContent","IonPage","useIonViewDidEnter","Geolocation","useEffect","useState","ServerAPI","Preloader","Home","latitude","setLatitude","longitude","setLongitude","showLoading","setShowLoading","locationName","setLocationName","weatherRes","setWeatherRes","coordinates","getCurrentPosition","then","data","coords","getWeatherReport","name","undefined"],"mappings":"mJAAA,OAASA,UAAT,CAAgCC,OAAhC,CAA+DC,kBAA/D,KAAyF,cAAzF,CAEA,MAAO,YAAP,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,C,wFAKA,GAAMC,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,EAAM,CAC3B,cAAgCH,QAAQ,CAAC,CAAD,CAAxC,wCAAOI,QAAP,eAAiBC,WAAjB,eACA,eAAkCL,QAAQ,CAAC,CAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eACA,eAAsCP,QAAQ,CAAC,KAAD,CAA9C,yCAAOQ,WAAP,eAAoBC,cAApB,eACA,eAAuCT,QAAQ,CAAC,EAAD,CAA/C,yCAAOU,YAAP,eAAoBC,eAApB,eAEA,eAAmCX,QAAQ,EAA3C,0CAAOY,UAAP,gBAAkBC,aAAlB,gBAEAhB,kBAAkB,CAAC,UAAI,CACrB,GAAMiB,CAAAA,WAAW,CAAGhB,WAAW,CAACiB,kBAAZ,EAApB,CACAD,WAAW,CAACE,IAAZ,CAAiB,SAAAC,IAAI,CAAE,CACrBZ,WAAW,CAACY,IAAI,CAACC,MAAL,CAAYd,QAAb,CAAX,CACAG,YAAY,CAACU,IAAI,CAACC,MAAL,CAAYZ,SAAb,CAAZ,CACD,CAHD,EAID,CANiB,CAAlB,CAQAP,SAAS,CAAC,UAAI,CACZU,cAAc,CAAC,IAAD,CAAd,CAECR,SAAS,CAACkB,gBAAV,CAA2Bb,SAA3B,CAAqCF,QAArC,EAA+CY,IAA/C,CAAoD,SAACC,IAAD,CAAQ,CAC1DR,cAAc,CAAC,KAAD,CAAd,CACA,GAAGQ,IAAH,CAAS,CACNJ,aAAa,CAACI,IAAD,CAAb,CACF,CACF,CALD,EAMF,CATQ,CASP,CAACX,SAAD,CATO,CAAT,CAWAP,SAAS,CAAC,UAAI,CACZ,GAAG,CAAAa,UAAU,OAAV,EAAAA,UAAU,SAAV,QAAAA,UAAU,CAAEQ,IAAZ,GAAkBC,SAArB,CACEV,eAAe,CAACC,UAAU,CAACQ,IAAZ,CAAf,CACH,CAHQ,CAGP,CAACR,UAAD,CAHO,CAAT,CAMA,mBACE,KAAC,OAAD,wBACE,MAAC,UAAD,EAAY,UAAU,KAAtB,wBACE,KAAC,SAAD,EAAW,MAAM,CAAEJ,WAAnB,CAAgC,YAAY,CAAE,8BAAMC,CAAAA,cAAc,CAAC,KAAD,CAApB,EAA9C,EADF,cAEE,aAAK,SAAS,CAAC,kCAAf,wBACE,aAAK,SAAS,CAAC,iBAAf,wBACI,UAAG,SAAS,CAAC,8CAAb,EADJ,cAEI,WAAI,SAAS,CAAC,6BAAd,UAA6CC,YAA7C,EAFJ,cAGI,UAAG,SAAS,CAAC,8BAAb,6BAHJ,GADF,cAME,YAAK,SAAS,CAAC,aAAf,uBACE,UAAG,SAAS,CAAC,yBAAb,gBADF,EANF,GAFF,GADF,EADF,CAiBD,CAlDD,CAoDA,cAAeP,CAAAA,IAAf","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, useIonViewDidEnter } from '@ionic/react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Home.css';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { useEffect, useState } from 'react';\nimport * as ServerAPI from '../common/ServerAPI';\nimport Preloader from '../components/Preloader';\nimport AppToast from '../components/AppToast';\nimport * as Utilities from '../common/Utilities';\nimport * as Constants from '../common/Constants';\n\nconst Home: React.FC = () => {\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [showLoading, setShowLoading] = useState(false);\n  const [locationName,setLocationName] = useState(\"\");\n\n  const [weatherRes,setWeatherRes] = useState<ServerAPI.WeatherRes>();\n\n  useIonViewDidEnter(()=>{\n    const coordinates = Geolocation.getCurrentPosition();\n    coordinates.then(data=>{\n      setLatitude(data.coords.latitude);\n      setLongitude(data.coords.longitude);\n    });\n  });\n\n  useEffect(()=>{\n    setShowLoading(true);\n\n     ServerAPI.getWeatherReport(longitude,latitude).then((data)=>{\n       setShowLoading(false);\n       if(data) {\n          setWeatherRes(data);\n       }\n     });\n  },[longitude])\n\n  useEffect(()=>{\n    if(weatherRes?.name!=undefined)\n      setLocationName(weatherRes.name);\n  },[weatherRes]);\n  \n  \n  return (\n    <IonPage>\n      <IonContent fullscreen>\n        <Preloader isOpen={showLoading} onDidDismiss={() => setShowLoading(false)} />\n        <div className=\"osahan-success vh-100 bg-weather\">\n          <div className=\"p-5 text-center\">\n              <i className=\"icofont-check-circled display-1 text-warning\"></i>\n              <h1 className=\"text-white font-weight-bold\">{locationName}</h1>\n              <p className=\"text-white font-weight-light\">Today's Weather</p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-white weather-text\">30</p>\n          </div>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}